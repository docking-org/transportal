# -*- coding: utf-8 -*-
# Generated by Django 1.11.29 on 2020-06-10 16:06
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Compound',
            fields=[
                ('slugName', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('clinicalUse', models.NullBooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='DDI',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transName', models.CharField(max_length=10)),
                ('interactingDrugDose', models.CharField(blank=True, max_length=100)),
                ('affectedDrugDose', models.CharField(blank=True, max_length=100)),
                ('studyDesign', models.CharField(blank=True, max_length=50, null=True)),
                ('AUC', models.CharField(blank=True, max_length=10, null=True)),
                ('Cmax', models.CharField(blank=True, max_length=10, null=True)),
                ('CLr', models.CharField(blank=True, max_length=10, null=True)),
                ('CLOverF', models.CharField(blank=True, max_length=10, null=True)),
                ('t1Over2', models.CharField(blank=True, max_length=10, null=True)),
                ('PDEffect', models.CharField(max_length=5)),
                ('affectedDrug', models.ManyToManyField(blank=True, related_name='affect_drug', to='transporterDatabase.Compound')),
                ('interactingDrug', models.ManyToManyField(related_name='interact_drug', to='transporterDatabase.Compound')),
            ],
        ),
        migrations.CreateModel(
            name='Expression',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('experiment', models.CharField(max_length=50)),
                ('value', models.FloatField(verbose_name='expression level')),
            ],
        ),
        migrations.CreateModel(
            name='Inhibitor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cmpndClinical', models.BooleanField(verbose_name='can the inhibitor be used in clinical tests')),
                ('cellSystem', models.CharField(blank=True, max_length=100, null=True)),
                ('ic50', models.CharField(blank=True, max_length=10, null=True)),
                ('ki', models.CharField(blank=True, max_length=10, null=True)),
                ('substrateClinical', models.BooleanField(verbose_name='can the substrate be used in clincial tests')),
                ('cmpnd', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='transporterDatabase.Compound')),
            ],
        ),
        migrations.CreateModel(
            name='inVitroInteraction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('V', 'Vesicular Transport'), ('A', 'ATPase Activity ')], max_length=1)),
                ('system', models.CharField(choices=[('C', 'Cells'), ('L', 'Liposomes'), ('I', 'IMV'), ('S', 'Solubilized'), ('M', 'Membrane patch')], max_length=1)),
                ('subtype', models.CharField(blank=True, choices=[('B', 'Basal activity'), ('P', 'Activity after pre-stimulation')], max_length=1)),
                ('ic50', models.CharField(blank=True, max_length=10, null=True)),
                ('ec50', models.CharField(blank=True, max_length=10, null=True)),
                ('stimConc', models.FloatField()),
                ('affectedSubstrate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='affect_sub', to='transporterDatabase.Compound')),
                ('interactingChemical', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='interact_chem', to='transporterDatabase.Compound')),
            ],
        ),
        migrations.CreateModel(
            name='Organ',
            fields=[
                ('name', models.CharField(max_length=30, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Reference',
            fields=[
                ('authors', models.TextField(blank=True, null=True)),
                ('year', models.CharField(blank=True, max_length=4, null=True)),
                ('pmid', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('otherText', models.CharField(blank=True, max_length=200, null=True, verbose_name='description for resource not in pubmed')),
                ('otherLink', models.CharField(blank=True, max_length=100, null=True, verbose_name='http link to resource not in pubmed')),
            ],
        ),
        migrations.CreateModel(
            name='Sample',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('age', models.IntegerField(blank=True, null=True)),
                ('tissueSpec', models.CharField(blank=True, max_length=50)),
                ('sex', models.CharField(blank=True, choices=[('M', 'Male'), ('F', 'Female')], max_length=1)),
                ('ethnicity', models.CharField(blank=True, max_length=20)),
                ('height', models.IntegerField(blank=True, null=True)),
                ('weight', models.IntegerField(blank=True, null=True)),
                ('bmi', models.IntegerField(blank=True, null=True)),
                ('menopausalStatus', models.CharField(blank=True, max_length=50)),
                ('numPregnancies', models.IntegerField(blank=True, null=True)),
                ('numLiveBirths', models.IntegerField(blank=True, null=True)),
                ('smokingStat', models.CharField(blank=True, choices=[('N', 'Never Used'), ('C', 'Current Use'), ('P', 'Previous Use'), ('O', 'Occasional Use')], max_length=1)),
                ('cigarettesPerDay', models.IntegerField(blank=True, null=True)),
                ('alcoholStatus', models.CharField(blank=True, choices=[('N', 'Never Used'), ('C', 'Current Use'), ('P', 'Previous Use'), ('O', 'Occasional Use')], max_length=1)),
                ('clinicalDiagnosisSpecimen', models.CharField(blank=True, max_length=100, null=True)),
                ('clinicalDiagnosisPatient', models.TextField(blank=True, null=True)),
                ('medications', models.TextField(blank=True, null=True)),
                ('recoveryType', models.CharField(blank=True, max_length=100, null=True)),
                ('causeOfDeath', models.CharField(blank=True, max_length=100, null=True)),
                ('experiment', models.CharField(max_length=50)),
                ('organ', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='transporterDatabase.Organ')),
            ],
        ),
        migrations.CreateModel(
            name='Substrate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cmpndClinical', models.BooleanField(verbose_name='can the substrate be used in clinical test')),
                ('cellSystem', models.CharField(blank=True, max_length=100, null=True)),
                ('km', models.CharField(blank=True, max_length=10, null=True)),
                ('cmpnd', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='transporterDatabase.Compound')),
                ('reference', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='transporterDatabase.Reference')),
            ],
        ),
        migrations.CreateModel(
            name='Transporter',
            fields=[
                ('symbol', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('synonyms', models.CharField(max_length=100, verbose_name='limited list of synonyms')),
                ('synonymsFull', models.CharField(max_length=100, verbose_name='all synonyms from NCBI database')),
                ('ncbiID', models.CharField(max_length=10, null=True)),
            ],
        ),
        migrations.AddField(
            model_name='substrate',
            name='trans',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='transporterDatabase.Transporter'),
        ),
        migrations.AddField(
            model_name='organ',
            name='important',
            field=models.ManyToManyField(to='transporterDatabase.Transporter', verbose_name='transporters expressed highly in the tissue'),
        ),
        migrations.AddField(
            model_name='invitrointeraction',
            name='reference',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='transporterDatabase.Reference'),
        ),
        migrations.AddField(
            model_name='invitrointeraction',
            name='trans',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='transporterDatabase.Transporter'),
        ),
        migrations.AddField(
            model_name='inhibitor',
            name='reference',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='transporterDatabase.Reference'),
        ),
        migrations.AddField(
            model_name='inhibitor',
            name='substrate',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='inhib_substrate', to='transporterDatabase.Compound'),
        ),
        migrations.AddField(
            model_name='inhibitor',
            name='trans',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='transporterDatabase.Transporter'),
        ),
        migrations.AddField(
            model_name='expression',
            name='organ',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='transporterDatabase.Organ'),
        ),
        migrations.AddField(
            model_name='expression',
            name='reference',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='transporterDatabase.Reference'),
        ),
        migrations.AddField(
            model_name='expression',
            name='trans',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='transporterDatabase.Transporter'),
        ),
        migrations.AddField(
            model_name='ddi',
            name='reference',
            field=models.ManyToManyField(blank=True, null=True, to='transporterDatabase.Reference'),
        ),
        migrations.AddField(
            model_name='ddi',
            name='transporters',
            field=models.ManyToManyField(to='transporterDatabase.Transporter'),
        ),
    ]
